<?php

namespace Bump\Core\Tests;

use Bump\Core\CMS;
use Bump\Core\User;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-05-27 at 13:09:29.
 */
class UserTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var User
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = User::getInstance();
    }

    /**
     * @covers Bump\Core\User::init
     */
    public function testInit()
    {
        $_REQUEST = ['lang' => 'en'];
        CMS::Config()->request = $_REQUEST;

        $this->object->init();
        $this->assertInstanceOf('Bump\Core\Session', $this->object->session);
        $this->assertEquals('En', $this->object->getLang());

        $_REQUEST = CMS::Config()->request = ['lang' => 'fr'];
        $this->object->init();
        $this->assertEquals(DEFAULT_LANGUAGE, $this->object->getLang());

        $_REQUEST = CMS::Config()->request = [];
        $this->object->session->clearItem('lang');
        $this->object->init();
        $this->assertEquals(DEFAULT_LANGUAGE, $this->object->getLang());
    }

    /**
     * @covers Bump\Core\User::registerUser
     */
    public function testRegisterUser()
    {
        $user = ['user' => 'test'];
        $this->object->registerUser($user);
        sleep(1);
        $this->assertLessThan(time(), $this->object->session->getItem('last_activity'));
        $this->assertEquals((object)$user, $this->object->session->getItem('cmsuser'));

        return (object)$user;
    }

    /**
     * @covers Bump\Core\User::getUserProfile
     * @depends testRegisterUser
     */
    public function testGetUserProfile($user)
    {
        $this->assertEquals($user, $this->object->getUserProfile());
    }

    /**
     * @covers Bump\Core\User::unregisterUser
     */
    public function testUnregisterUser()
    {
        $this->object->unregisterUser();
        $this->assertEmpty($this->object->session->getItem("cmsuser"));
    }

    /**
     * @covers Bump\Core\User::getUserLevel
     */
    public function testGetUserLevel()
    {
        $this->object->init();
        $this->object->registerUser(['user_name' => 'Ivan', 'user_id' => 2, 'user_level' => 50]);
        $this->assertEquals(50, $this->object->getUserLevel());
    }

    /**
     * @covers Bump\Core\User::getLang
     */
    public function testGetLang()
    {
        $this->object->init();
        $this->assertEquals('En', $this->object->getLang());
    }

    /**
     * @covers Bump\Core\User::isRegistered
     */
    public function testIsRegistered()
    {
        $this->object->init();
        $this->object->registerUser(['user_name' => 'Ivan', 'user_id' => 2, 'user_level' => 50]);
        $this->assertEquals(2, $this->object->isRegistered());
    }

    /**
     * @covers Bump\Core\User::getID
     */
    public function testGetID()
    {
        $this->object->init();
        $this->object->registerUser(['user_login' => 'test', 'user_id' => 2, 'user_level' => 50]);
        $this->assertEquals(2, $this->object->getID());
    }

    /**
     * @covers Bump\Core\User::getUserLogin
     */
    public function testGetUserLogin()
    {
        $this->object->init();
        $this->object->registerUser(['user_login' => 'test', 'user_id' => 2, 'user_level' => 50]);
        $this->assertEquals('test', $this->object->getUserLogin());
    }

    /**
     * @covers Bump\Core\User::getUserName
     */
    public function testGetUserName()
    {
        $this->object->init();
        $this->object->registerUser(['user_name' => 'Ivan', 'user_id' => 2, 'user_level' => 50]);
        $this->assertEquals('Ivan', $this->object->getUserName());
    }

    /**
     * @covers Bump\Core\User::getEnableProfile
     */
    public function testGetEnableProfile()
    {
        $this->object->init();
        $this->object->registerUser(['user_name' => 'Ivan', 'user_id' => 2, 'user_enable_profile' => 'true']);
        $this->assertTrue($this->object->getEnableProfile());
    }

    /**
     * @covers Bump\Core\User::getUserGroup
     */
    public function testGetUserGroup()
    {
        $this->object->init();
        $this->object->registerUser(['user_name' => 'Ivan', 'user_id' => 2, 'user_group' => 'private']);
        $this->assertEquals('private', $this->object->getUserGroup());
    }

    /**
     * @covers Bump\Core\User::getUserLevelGroup
     */
    public function testGetUserLevelGroup()
    {
        $this->object->init();
        $this->object->registerUser(['user_name' => 'Ivan', 'user_id' => 2, 'ug_id' => 4]);
        $this->assertEquals(4, $this->object->getUserLevelGroup());
    }
}
