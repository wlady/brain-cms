<?php

namespace Bump\Core\Tests;

use Bump\Core\CMS;
use Bump\Core\YAML;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-05-26 at 13:53:04.
 */
class YAMLTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var YAML
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new YAML;
    }

    /**
     * @covers Bump\Core\YAML::load
     */
    public function testLoad()
    {
        CMS::Config()->cache->flush();
        $result = $this->object->load('file_does_not_exist.yaml', $this->getFilesPath());
        $this->assertCount(0, $result);

        $result = $this->object->load('example.yaml', $this->getFilesPath());
        $this->assertTrue(is_array($result));
        $this->assertCount(4, $result);

        $this->assertArrayHasKey('single_integer', $result);
        $this->assertArrayHasKey('single_float', $result);
        $this->assertArrayHasKey('simple_array', $result);
        $this->assertArrayHasKey('key_value_array', $result);

        if (isset($result['key_value_array'])) {
            foreach (array('bar', 'baz', 'foo') as $v) {
                $this->assertArrayHasKey($v . '_key', $result['key_value_array']);
                $this->assertEquals($result['key_value_array'][$v . '_key'], $v . '_value');
            }
        }

        //test loading from cache
        $result = $this->object->load('example.yaml', $this->getFilesPath());
        $this->assertCount(4, $result);

        return $result;
    }

    /**
     * @covers Bump\Core\YAML::dump
     * @depends testLoad
     */
    public function testDump($result)
    {
       $this->assertEquals(
           $this->object->dump($result),
           file_get_contents($this->getFilesPath() . '/example.yaml')
       );
    }

    /**
     * @return string
     */
    protected function getFilesPath()
    {
        return __DIR__ . '/files';
    }
}
