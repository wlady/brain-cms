<?php

namespace Bump\Modules\Library\Tests;

use Bump\Core\CMS;
use Bump\Modules\Library\Library;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-04-21 at 14:21:40.
 */
class LibraryTest extends \Bump\Tests\BaseTest
{
    /**
     * @var Library
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new Library;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers Bump\Modules\Library\Library::init
     */
    public function testInit()
    {
        $this->object->init();
        $this->assertInstanceOf('\Bump\Modules\Library\Model\LibraryArticle', $this->object->model);
    }

    /**
     * @covers Bump\Modules\Library\Library::_preSaveRow
     */
    public function testPreSaveRow()
    {
        $foo = $this->getMethod('_preSaveRow');
        $fields = [
            'title' => 'Test PHPUnit Article',
            'alias' => ''
        ];
        $foo->invokeArgs($this->object, [&$fields]);
        $this->assertEquals($fields['alias'], 'test-phpunit-article');
    }

    /**
     * @covers Bump\Modules\Library\Library::getByAlias
     * @covers Bump\Modules\Library\Library::getById
     */
    public function testGetByAlias()
    {
        $fields = [
            'title' => 'Test PHPUnit Article',
            'alias' => ''
        ];
        $res = $this->object->saveRow($fields);
        $this->assertTrue($res);
        $row = $this->object->getRow([
            'title' => 'Test PHPUnit Article'
        ]);
        $this->assertTrue(is_array($row));
        $row = $this->object->getByAlias([
            'alias' => 'test-phpunit-article'
        ]);
        $this->assertTrue(is_array($row));
        $row = $this->object->getById([
            'id' => $row['id']
        ]);
        $this->assertTrue(is_array($row));
    }

    /**
     * @covers Bump\Modules\Library\Library::getLibraryDocsArray
     */
    public function testGetLibraryDocsArray()
    {
        $rows = $this->object->getLibraryDocsArray();
        $cnt1 = count($rows);
        $this->assertTrue($cnt1>0);
        $rows = $this->object->getLibraryDocsArray([
            'empty' => 1
        ]);
        $cnt2 = count($rows);
        $this->assertTrue(count($cnt2)>0);
        $this->assertTrue($cnt2>$cnt1);
    }

    /**
     * @covers Bump\Modules\Library\Library::reload
     */
    public function testReload()
    {
        $res = $this->object->reload();
        $this->assertTrue(count($res['ds'])>0);
        $this->object->db->Execute('DELETE FROM cms_library_articles WHERE alias=?', 'test-phpunit-article');
    }

}
